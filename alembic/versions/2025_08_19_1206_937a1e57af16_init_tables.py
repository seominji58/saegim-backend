"""init tables

Revision ID: 937a1e57af16
Revises: 
Create Date: 2025-08-19 12:06:05.429293+09:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlmodel.sql.sqltypes import GUID

# revision identifiers, used by Alembic.
revision: str = '937a1e57af16'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('email_verifications',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('verification_code', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint('char_length(verification_code) = 6', name='ck_verif_code_len'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_email_code', 'email_verifications', ['email', 'verification_code'], unique=False)
    op.create_index('idx_expires', 'email_verifications', ['expires_at'], unique=False, postgresql_where=sa.text('expires_at IS NOT NULL'))
    op.create_index(op.f('ix_email_verifications_email'), 'email_verifications', ['email'], unique=False)
    op.create_table('oauth_tokens',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('access_token', sa.String(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("provider IN ('google','kakao','naver')", name='ck_oauth_provider'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'provider', name='uq_oauth_user_provider')
    )
    op.create_index('idx_oauth_expires', 'oauth_tokens', ['expires_at'], unique=False, postgresql_where=sa.text('expires_at IS NOT NULL'))
    op.create_index(op.f('ix_oauth_tokens_provider'), 'oauth_tokens', ['provider'], unique=False)
    op.create_index(op.f('ix_oauth_tokens_user_id'), 'oauth_tokens', ['user_id'], unique=False)
    op.create_table('password_reset_tokens',
    sa.Column('id', GUID(), nullable=False),
    sa.Column('user_id', GUID(), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_used', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('token', name='uq_password_reset_token')
    )
    op.create_index('idx_user_reset', 'password_reset_tokens', ['user_id', 'is_used', 'expires_at'], unique=False)
    op.create_index(op.f('ix_password_reset_tokens_token'), 'password_reset_tokens', ['token'], unique=False)
    op.create_index(op.f('ix_password_reset_tokens_user_id'), 'password_reset_tokens', ['user_id'], unique=False)
    # User 테이블은 이미 존재하므로 건드리지 않습니다
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # User 테이블은 이미 존재하므로 건드리지 않습니다
    op.drop_index(op.f('ix_password_reset_tokens_user_id'), table_name='password_reset_tokens')
    op.drop_index(op.f('ix_password_reset_tokens_token'), table_name='password_reset_tokens')
    op.drop_index('idx_user_reset', table_name='password_reset_tokens')
    op.drop_table('password_reset_tokens')
    op.drop_index(op.f('ix_oauth_tokens_user_id'), table_name='oauth_tokens')
    op.drop_index(op.f('ix_oauth_tokens_provider'), table_name='oauth_tokens')
    op.drop_index('idx_oauth_expires', table_name='oauth_tokens', postgresql_where=sa.text('expires_at IS NOT NULL'))
    op.drop_table('oauth_tokens')
    op.drop_index(op.f('ix_email_verifications_email'), table_name='email_verifications')
    op.drop_index('idx_expires', table_name='email_verifications', postgresql_where=sa.text('expires_at IS NOT NULL'))
    op.drop_index('idx_email_code', table_name='email_verifications')
    op.drop_table('email_verifications')
    # ### end Alembic commands ###